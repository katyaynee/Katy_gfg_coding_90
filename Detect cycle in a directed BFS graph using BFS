class Solution {
    // Function to detect cycle in a directed graph.
    public boolean isCyclic(int V, ArrayList<ArrayList<Integer>> adj) {
    
      int indegree[] =new int[V];
        
        
         
         
         for(int i=0;i<V;i++)
         {
            for(int it: adj.get(i)) 
            {
                indegree[it]++;
            }
         }
         
         Queue<Integer> q=new LinkedList<>();
        int topoCount=0;
        
         for(int i=0;i<V;i++)
         {
             if(indegree[i]==0)
             q.add(i);
         }
         int c=0;
         while(!q.isEmpty())
         {
             int node= q.remove();
            topoCount++;
             for(int it:adj.get(node))
             {
                 indegree[it]--;
                 if(indegree[it]==0)
                 q.add(it);
             }
         }
       if(topoCount==V)
       return false;
       else 
       return true;
     
    }
    
        
       
    
}
