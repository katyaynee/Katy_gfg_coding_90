solution1: 
class Solution
{
    //Function to find the maximum occurring character in a string.
    public static char getMaxOccuringChar(String line)
    {
        
        int[] count= new int[256];
        int max_f=0;
        char ans=0;
        for(int i=0;i<line.length();i++)
        {
           
            count[line.charAt(i)]++;
            if(count[line.charAt(i)]>max_f)
            {
                max_f=count[line.charAt(i)];
                ans=line.charAt(i);
            }
        }
            return ans;
        
    }
    
}



Solution2:

class Solution
{
    //Function to find the maximum occurring character in a string.
    public static char getMaxOccuringChar(String line)
    {
    
        HashMap<Character,Integer> hm=new HashMap<>();
        char ans=0;
        int count=0;
        for(int i=0;i<line.length();i++)
        {
            char c=line.charAt(i);
            if(hm.containsKey(c))
            hm.put(c,hm.get(c)+1);
            
            else
            hm.put(c,0);
            
           
            if(count<hm.get(c))
            {
            count=hm.get(c);
             ans=c;
            }
        }
        return ans;
        
     }
       
        }


Solution 3: Prints lexicographically



 int[] freq=new int[26];
        int max=-1;
        char ans=0;
        for(int i=0;i<line.length();i++)
        { 
            if(line.charAt(i)!=' ')
            {
                freq[line.charAt(i)-'a']++;
                
            }
        }
        
        
        for(int i=0;i<26;i++)
        {
            if(max<freq[i])
            {
               max=freq[i];
               ans=(char)(i+'a');
            }
        }
        
        return ans;
