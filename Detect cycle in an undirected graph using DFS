

class Solution {
    // Function to detect cycle in an undirected graph.
    public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
        int[] vis=new int[V];
        
        for(int i=0;i<V;i++)
        vis[i]=0;
        
        
        for(int i=0;i<V;i++)
        {
            if(vis[i]==0)
             {if(detectCycle(i,-1,vis,adj)==true)
             return true;
             }
            
        }
        return false;
    }
    
     public boolean detectCycle(int src,int parent,int[] vis, ArrayList<ArrayList<Integer>> adj) {
        // Code here
      vis[src]=1;
      
      for(int it: adj.get(src))
      {
          if(vis[it]==0)
          {
             if( detectCycle(it,src,vis,adj)==true)
             return true;
          }
          else if(parent!=it)
          return true;
      }
      return false;
    
}
}
