class Solution {
    static int numProvinces(ArrayList<ArrayList<Integer>> adj, int V) {
        // code here
        ArrayList<ArrayList<Integer>> adjlist = new ArrayList<ArrayList<Integer>>();
        
        for(int i=0;i<V;i++)
        adjlist.add(new ArrayList<Integer>());
        
        for(int i=0;i<V;i++)
        {
            for(int j=0;j<V;j++)
            {
                if(adj.get(i).get(j)==1 && i!=j)
                {
                adjlist.get(i).add(j);
                adjlist.get(j).add(i);
                }
            }
        }
        
        
        int vis[]=new int[V];
        int c=0;
        for(int i=0;i<V;i++)
        {
            if(vis[i]==0)
            {
                 c++;
                dfs(i,adjlist,vis);
               
            }
        }
        
        
        return c;
    }
    
    
    static void dfs(int i,ArrayList<ArrayList<Integer>> adjL, int[] vis) {
        
        vis[i]=1;
        
        for(Integer it: adjL.get(i))
        {
            if(vis[it]==0)
            {
                dfs(it,adjL,vis);
            }
        }
        
        
        
        
        
    }
};
