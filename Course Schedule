

//User function Template for Java

class Solution
{
    static int[] findOrder(int n, int m, ArrayList<ArrayList<Integer>> prerequisites) 
    {
        // add your code here
         
        ArrayList<ArrayList<Integer>> adj=new ArrayList<>();
        
        for(int i=0;i<n;i++)
        {adj.add(new ArrayList<>());
            
        }
        
        for(int i=0;i<m;i++)
         adj.get(prerequisites.get(i).get(1)).add(prerequisites.get(i).get(0));
        
         int indegree[] =new int[n];
        
        
         
         
         for(int i=0;i<n;i++)
         {
            for(int it: adj.get(i)) 
            {
                indegree[it]++;
            }
         }
         
         Queue<Integer> q=new LinkedList<>();
         int[] topo=new int[n];
       
         for(int i=0;i<n;i++)
         {
             if(indegree[i]==0)
             q.add(i);
         }
         int c=0;
         while(!q.isEmpty()) 
         {
             int node= q.remove();
             topo[c++]=node;
            
             for(int it:adj.get(node))
             {
                 indegree[it]--;
                 if(indegree[it]==0)
                 q.add(it);
             }
         }
         
       int arr[] = {};
       
       if(c==n)
       return topo;
       else 
       return arr;
     
    }
}
